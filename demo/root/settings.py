"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 1.8.16.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

from fluent import sender

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5#5-q4tff9mkg)9j)_hdyu8y4le(4_58luq7)0g0_lu_jv*xv@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_scim',
    'oauth2_provider',
    'app',
)

MIDDLEWARE = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'app.middleware.CustomSCIMAuthCheckMiddleware',
)

AUTHENTICATION_BACKENDS = [
    # Django default backend
    'django.contrib.auth.backends.ModelBackend',
    # used for SCIM integration
    'oauth2_provider.backends.OAuth2Backend',
]

AUTH_USER_MODEL = 'app.User'

ROOT_URLCONF = 'root.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'root.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Logging
# Start Fluentd logging system
sender.setup('app')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.CallbackFilter',
            'callback': lambda r: not DEBUG
        }
    },

    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(name)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'medium': {
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
        'fluentd': {
            '()': 'fluent.handler.FluentRecordFormatter',
            'format': {
                'hostname': '%(hostname)s',
                'asctime': '%(asctime)s',
                'created': '%(created)f',
                'filename': '%(filename)s',
                'funcName': '%(funcName)s',
                'levelname': '%(levelname)s',
                'levelno': '%(levelno)s',
                'lineno': '%(lineno)d',
                'module': '%(module)s',
                'msecs': '%(msecs)d',
                'message': '%(message)s',
                'name': '%(name)s',
                'pathname': '%(pathname)s',
                'process': '%(process)d',
                'processName': '%(processName)s',
                'relativeCreated': '%(relativeCreated)d',
                'thread': '%(thread)d',
                'threadName': '%(threadName)s',
                'exc_text': '%(exc_text)s',
            }
        },
        # This formatter is specifically for use with the
        # SCIMFluentHandler handler.
        'scim-details': {
            '()': 'fluent.handler.FluentRecordFormatter',
            'format': {
                'hostname': '%(hostname)s',
                'asctime': '%(asctime)s',
                'created': '%(created)f',
                'filename': '%(filename)s',
                'funcName': '%(funcName)s',
                'levelname': '%(levelname)s',
                'levelno': '%(levelno)s',
                'lineno': '%(lineno)d',
                'module': '%(module)s',
                'msecs': '%(msecs)d',
                'message': '%(message)s',
                'name': '%(name)s',
                'pathname': '%(pathname)s',
                'process': '%(process)d',
                'processName': '%(processName)s',
                'relativeCreated': '%(relativeCreated)d',
                'thread': '%(thread)d',
                'threadName': '%(threadName)s',
                'exc_text': '%(exc_text)s',
                # SCIM specifics
                'request_absolute_uri': '%(request_absolute_uri)s',
                'request_method': '%(request_method)s',
                'response_status_code': '%(response_status_code)s',
            }
        }
    },

    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'debug': {
            'level': 'DEBUG',
            'class': 'fluent.handler.FluentHandler',
            'formatter': 'fluentd',
            'tag': 'app.debug',
        },
        'scim': {
            'level': 'DEBUG',
            'class': 'app.log_handlers.SCIMFluentHandler',
            'formatter': 'scim-details',
            'tag': 'app.scim',
        },
    },

}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

SCIM_SERVICE_PROVIDER = {
    'USER_ADAPTER': 'app.adapters.SCIMUser',
    'GROUP_MODEL': 'app.models.Group',
    'GROUP_ADAPTER': 'django_scim.adapters.SCIMGroup',
    'SERVICE_PROVIDER_CONFIG_MODEL': 'django_scim.models.SCIMServiceProviderConfig',
    'BASE_LOCATION_GETTER': 'app.utils.get_full_domain_from_request',
    'GET_EXTRA_MODEL_FILTER_KWARGS_GETTER': 'app.utils.get_extra_model_filter_kwargs_getter',
    'GET_EXTRA_MODEL_EXCLUDE_KWARGS_GETTER': 'app.utils.get_extra_model_exclude_kwargs_getter',
    'SCHEMAS_GETTER': 'django_scim.schemas.default_schemas_getter',
    'DOCUMENTATION_URI': None,
    'SCHEME': 'https',
    # use default value, this will be overridden by value returned by BASE_LOCATION_GETTER
    'NETLOC': 'localhost',
    'AUTHENTICATION_SCHEMES': [
        {
            'type': 'oauth2',
            'name': 'OAuth 2',
            'description': 'Oauth 2 implemented with bearer token',
            'specUri': '',
            'documentationUri': '',
        },
    ],
    'WWW_AUTHENTICATE_HEADER': 'Basic realm="Template App SCIM2.0"',
}
